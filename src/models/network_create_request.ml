(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

type t = {
    (* The network's name. *)
    name: string;
    (* Check for networks with duplicate names. Since Network is primarily keyed based on a random ID and not on the name, and network name is strictly a user-friendly alias to the network which is uniquely identified using ID, there is no guaranteed way to check for duplicates. CheckDuplicate is there to provide a best effort checking of any networks which has the same name but it is not guaranteed to catch all name collisions.  *)
    check_duplicate: bool option [@default None];
    (* Name of the network driver plugin to use. *)
    driver: string option [@default None];
    (* Restrict external access to the network. *)
    internal: bool option [@default None];
    (* Globally scoped network is manually attachable by regular containers from workers in swarm mode.  *)
    attachable: bool option [@default None];
    (* Ingress network is the network which provides the routing-mesh in swarm mode.  *)
    ingress: bool option [@default None];
    ipam: Ipam.t option [@default None];
    (* Enable IPv6 on the network. *)
    enable_ipv6: bool option [@default None];
    (* Network specific options to be used by the drivers. *)
    options: (string * string) list;
    (* User-defined key/value metadata. *)
    labels: (string * string) list;
} [@@deriving yojson { strict = false }, show ];;

let create (name : string) : t = {
    name = name;
    check_duplicate = None;
    driver = None;
    internal = None;
    attachable = None;
    ingress = None;
    ipam = None;
    enable_ipv6 = None;
    options = [];
    labels = [];
}

