(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

type t = {
    (* Attach to `stdin` of the exec command. *)
    attach_stdin: bool option [@default None];
    (* Attach to `stdout` of the exec command. *)
    attach_stdout: bool option [@default None];
    (* Attach to `stderr` of the exec command. *)
    attach_stderr: bool option [@default None];
    (* Override the key sequence for detaching a container. Format is a single character `[a-Z]` or `ctrl-<value>` where `<value>` is one of: `a-z`, `@`, `^`, `[`, `,` or `_`.  *)
    detach_keys: string option [@default None];
    (* Allocate a pseudo-TTY. *)
    tty: bool option [@default None];
    (* A list of environment variables in the form `[\''VAR=value\'', ...]`.  *)
    env: string list;
    (* Command to run, as a string or array of strings. *)
    cmd: string list;
    (* Runs the exec process with extended privileges. *)
    privileged: bool option [@default None];
    (* The user, and optionally, group to run the exec process inside the container. Format is one of: `user`, `user:group`, `uid`, or `uid:gid`.  *)
    user: string option [@default None];
    (* The working directory for the exec process inside the container.  *)
    working_dir: string option [@default None];
} [@@deriving yojson { strict = false }, show ];;

let create () : t = {
    attach_stdin = None;
    attach_stdout = None;
    attach_stderr = None;
    detach_keys = None;
    tty = None;
    env = [];
    cmd = [];
    privileged = None;
    user = None;
    working_dir = None;
}

