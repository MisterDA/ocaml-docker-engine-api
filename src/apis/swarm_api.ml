(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let swarm_init ~body =
    let open Lwt.Infix in
    let uri = Request.build_uri "/swarm/init" in
    let headers = Request.default_headers in
    let body = Request.write_as_json_body Swarm_init_request.to_yojson body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.to_string) resp body

let swarm_inspect () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/swarm" in
    let headers = Request.default_headers in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Swarm.of_yojson) resp body

let swarm_join ~body =
    let open Lwt.Infix in
    let uri = Request.build_uri "/swarm/join" in
    let headers = Request.default_headers in
    let body = Request.write_as_json_body Swarm_join_request.to_yojson body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.handle_unit_response resp

let swarm_leave ?(force = false) () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/swarm/leave" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param uri "force" string_of_bool force in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let swarm_unlock ~body =
    let open Lwt.Infix in
    let uri = Request.build_uri "/swarm/unlock" in
    let headers = Request.default_headers in
    let body = Request.write_as_json_body Swarm_unlock_request.to_yojson body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.handle_unit_response resp

let swarm_unlockkey () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/swarm/unlockkey" in
    let headers = Request.default_headers in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Unlock_key_response.of_yojson) resp body

let swarm_update ~version ~body ?(rotate_worker_token = false) ?(rotate_manager_token = false) ?(rotate_manager_unlock_key = false) () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/swarm/update" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param uri "version" Int64.to_string version in
    let uri = Request.add_query_param uri "rotateWorkerToken" string_of_bool rotate_worker_token in
    let uri = Request.add_query_param uri "rotateManagerToken" string_of_bool rotate_manager_token in
    let uri = Request.add_query_param uri "rotateManagerUnlockKey" string_of_bool rotate_manager_unlock_key in
    let body = Request.write_as_json_body Swarm_spec.to_yojson body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.handle_unit_response resp

